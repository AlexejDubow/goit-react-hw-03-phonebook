{"version":3,"sources":["components/ContactsList/index.jsx","components/Filter/index.jsx","components/ContactForm/index.jsx","helpers/FilterContacts/index.js","components/App.jsx","index.jsx"],"names":["ContactsList","contacts","deleteContact","map","id","name","number","key","type","onClick","Filter","onChangeFilter","onChange","prototype","PropTypes","func","isRequired","idInputName","uuidv4","idInputNumber","ContactForm","state","handleChange","target","value","setState","handleFormSubmit","e","preventDefault","props","addContact","this","onSubmit","htmlFor","disabled","Component","filterContacts","filter","contact","toLowerCase","includes","App","changeFilter","handleAddContact","isUniqueName","alert","newContact","prevState","some","handleDelete","contactsFromLS","localStorage","getItem","JSON","parse","setItem","stringify","filteredContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69ad87a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './styles/index.module.css';\r\n\r\nconst ContactsList = ({ contacts, deleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n\r\n      <li key={id}>\r\n        <p>{`${name}: ${number}`}</p>\r\n        <button type=\"button\" onClick={() => deleteContact(id)}>Delete</button>\r\n      </li>\r\n\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ onChangeFilter }) => (\r\n  <>\r\n    <h4>Find contact by name</h4>\r\n    <input type=\"text\" name=\"filter\" onChange={onChangeFilter} />\r\n  </>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.prototype = {\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport './styles/index.module.css'\r\n\r\nconst idInputName = uuidv4();\r\nconst idInputNumber = uuidv4();\r\n\r\nclass ContactForm extends Component {\r\n\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact({ ...this.state });\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { name, number } = this.state;\r\n    \r\n    return (\r\n      <>\r\n        <h2>Phonebook</h2>\r\n        <form \r\n        onSubmit={this.handleFormSubmit}>\r\n          <fieldset>\r\n            <p>Name</p>\r\n            <label htmlFor={idInputName}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                id={idInputName}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <label htmlFor={idInputNumber}>\r\n              <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                id={idInputNumber}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!name || !number}\r\n            >\r\n              Add contact\r\n            </button>\r\n          </fieldset>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","const filterContacts = (contacts, filter) => {\r\n  return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n};\r\nexport default filterContacts;\r\n","import React, { Component } from \"react\";\r\nimport ContactsList from \"./ContactsList\";\r\nimport Filter from \"./Filter\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport filterContacts from \"../helpers/FilterContacts\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contactsFromLS = localStorage.getItem('contacts')\r\n    if (contactsFromLS){\r\n      const contacts = JSON.parse(contactsFromLS)\r\n    this.setState({contacts: contacts})\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.contacts !== this.state.contacts){\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n    }\r\n  }\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  changeFilter = ({ target: { value } }) => {\r\n    this.setState(() => ({ filter: value }));\r\n  };\r\n\r\n  handleAddContact = (contact) => {\r\n    if (!this.isUniqueName(contact)) {\r\n      const newContact = {id: uuidv4(), ...contact };\r\n      this.setState((prevState) => ({\r\n        contacts: [...prevState.contacts, newContact],\r\n      }));\r\n    } else {\r\n      alert(`${contact.name} is already in contacts`)\r\n    }\r\n  };\r\n\r\n  isUniqueName = ({ name }) => {\r\n    return this.state.contacts.some((contact) => contact.name === name);\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = filterContacts(contacts, filter);\r\n\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addContact={this.handleAddContact} />\r\n        <h2>Contacts</h2>\r\n        {contacts.length > 1 && <Filter onChangeFilter={this.changeFilter} />}\r\n        <ContactsList contacts={filteredContacts} deleteContact={this.handleDelete}/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}